"""
Django settings for h2100 project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from django.contrib.messages import constants as messages

BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1!3)52_eu&!5k*2j7z3e@ay2i9v=l0_qud2c29&@&zoeh!yqsv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['www.tirr.com', 'tirr.com', 'hackingto100.com', 'www.hackingto100.com']
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER= 'h2100email@gmail.com'
EMAIL_HOST_PASSWORD = 'Wgo01110lef..,,,'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

'''
If using gmail, you will need to unlock Captcha to enable Django to send for you:
https://accounts.google.com/displayunlockcaptcha
'''

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'registration', # Should be immediately above 'django.contrib.auth'
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',


    # Third Party Apps
    'django_forms_bootstrap',
    'django_hosts',
    'crispy_forms',
    'markdown_deux',
    'pagedown',


    # Local Apps
    'analytics',
    'blog',
    'contact',
    'shortener',
    'newsletter',
    'ckwotes',
)

CRISPY_TEMPLATE_PACK = 'bootstrap3'
# Django-registration-redux settings
ACCOUNT_ACTIVATION_DAYS = 7
REGISTRATION_AUTO_LOGIN = True
LOGIN_REDIRECT_URL = '/'
#LOGIN_REDIRECT_URL = '/accounts/profile/'
# REGISTRATION_DEFAULT_FROM_EMAIL
# REGISTRATION_EMAIL_HTML
SITE_ID = 1




MIDDLEWARE_CLASSES = (
    'django_hosts.middleware.HostsRequestMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django_hosts.middleware.HostsResponseMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
)



ROOT_URLCONF = 'h2100.urls'
ROOT_HOSTCONF = 'h2100.hosts'
DEFAULT_HOST = 'www'
# Following are set to actual domain names in production. The addresses
# below are reflected in Windows/system32/drivers/etc/hosts mapping of
# 127.0.0.1     tirr.com and 127.0.0.1 www.tirr.com 
# Port 8000 for run w/o heroku procfile; port 5000 with
DEFAULT_REDIRECT_URL = "http://www.tirr.com:8000"
PARENT_HOST = "tirr.com"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        # 'APP_DIRS': True, #Should not be set when loaders is defined.
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ]
        },
    },
]

WSGI_APPLICATION = 'h2100.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {  
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'h2100',                      # Or path to database file if using sqlite3.
        'USER': 'chay',                      # Not used with sqlite3.
        'PASSWORD': 'lopdat',                  # Not used with sqlite3.
        'HOST': 'localhost',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '5432',                      # Set to empty string for default. Not used with sqlite3.
    }
}

# Password Validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
# {
#     'NAME': 'django.contrib.auth.password_validation.UserAttributesSimilarityValidator',
# },
# {
#     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
# },
# {
#     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
# },
# {
#     'NAME': 'djanto.contrib.auth.password_validation.NumericPasswordValidator',
# },
# ]


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Anchorage'

USE_I18N = True

USE_L10N = True

USE_TZ = True


PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),
)

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# STATIC_URL = '/static/'

# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(PROJECT_DIR, 'static_in_venv', 'static_root')
# # STATIC_ROOT = os.path.join(BASE_DIR, 'static', 'static_root')
# # # STATIC_ROOT = "/var/www/example.com/static/"
# # # STATIC_ROOT is where files are collected to be served when going live
# # Path also could be: os.path.join(os.path.dirname(BASE_DIR), 'static_in_env', 'static_root')

# # We put our files in STATICFILES_DIRS; could include ,'/var/www/static',
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'static'),
#     # os.path.join(BASE_DIR, 'static', 'h2_static'),
    
#     )

MEDIA_URL= '/media/'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
#MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'media')
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'media')

SHORTCODE_MAX = 16
SHORTCODE_MIN = 4